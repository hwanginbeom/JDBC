/* oracle driver를 로딩 
 * -> Connection() -> 
 * -> Statement -> sql 문장실행
 * -> ResultSet or int -> 결과값 활용 -> 자원반환
 * 
 * 
 */
package step01.basic;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class JDBC1 {

	public static void main(String[] args)  {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver"); // 설치와 같은 개념이다 ! 로딩이다 !  이부분에 있는걸 가져와서 로딩해라 
			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:xe","SCOTT","TIGER");
			//oracle.jdbc.driver.T4CConnection@7e32c033
			
			//java.sql.Connection은 (구) sun 에서 제시한 DB 접속 API		//시스템의 도메인 아이피 (localhost)
			//interface 즉 실제 완벽하게 구현되게 아니라 구현 하라는 명령들로만 구성	//jdbc로 연결하고 oracle db이고 db에 따라서 mySql 이런식으로바뀐다.
			//실제 구현은 각 회사가 직접구현 ...ojdbc6.jar로 압축해서 제공	//thin은 경량화 된 오라클을 말하는 표기법 // xe는 버전 별칭 
			//따라서 실제 반환받은 Connection은 완벽한 자식 객체이고 
			// 다형성이 반영된 부모타입으로 up casting 이다 
			System.out.println(con);
			
			Statement stmt = con.createStatement();
			ResultSet rs=stmt.executeQuery("select * from dept"); //결과 값을 저장
			while(rs.next()) {
				System.out.println(rs.getInt(1)+ " "         //컬럼 순서나 컬럼명을 써도 된다.
										+ rs.getString("dname")+" "
										+rs.getString(3));
			}
			
			} catch (Exception e) { //Exception 이건 모든 Exception의 부모라 다 됨
			e.printStackTrace();
		}
	}

}
